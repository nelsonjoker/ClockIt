package com.kelio.webservice;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.10.3.0
//
// Created by Quasar Development 
//
//----------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class Clocking extends EmployeeInformation implements KvmSerializable
{

    
    private java.util.Date date;
    
    private Integer geolocationStatus;
    
    private Integer geolocationPrecision;
    
    private Integer clockingTypeIndicator;
    
    private String time;
    
    private Integer clockingKey;
    
    private Boolean automatic;
    
    private Integer readerKey;
    
    private Integer timePosition;
    
    private Integer obtainingMode;
    
    private Float longitude;
    
    private Float latitude;
    
    private Integer inOutIndicator;
    
    private Integer absenceTypeKey;
    
    private String absenceTypeAbbreviation;
    
    private String readerDescription;
    
    private String absenceTypeDescription;
    
    private Integer terminalKey;
    
    private String terminalDescription;
    
    private String overtimeTypeDescription;
    
    private String overtimeTypeAbbreviation;
    
    private Integer overtimeTypeKey;
    
    public java.util.Date getDate()
    {
        return this.date;
    }
    
    public void setDate(java.util.Date value)
    {
        this.date = value;     
    }
    
    public Integer getGeolocationStatus()
    {
        return this.geolocationStatus;
    }
    
    public void setGeolocationStatus(Integer value)
    {
        this.geolocationStatus = value;     
    }
    
    public Integer getGeolocationPrecision()
    {
        return this.geolocationPrecision;
    }
    
    public void setGeolocationPrecision(Integer value)
    {
        this.geolocationPrecision = value;     
    }
    
    public Integer getClockingTypeIndicator()
    {
        return this.clockingTypeIndicator;
    }
    
    public void setClockingTypeIndicator(Integer value)
    {
        this.clockingTypeIndicator = value;     
    }
    
    public String getTime()
    {
        return this.time;
    }
    
    public void setTime(String value)
    {
        this.time = value;     
    }
    
    public Integer getClockingKey()
    {
        return this.clockingKey;
    }
    
    public void setClockingKey(Integer value)
    {
        this.clockingKey = value;     
    }
    
    public Boolean getAutomatic()
    {
        return this.automatic;
    }
    
    public void setAutomatic(Boolean value)
    {
        this.automatic = value;     
    }
    
    public Integer getReaderKey()
    {
        return this.readerKey;
    }
    
    public void setReaderKey(Integer value)
    {
        this.readerKey = value;     
    }
    
    public Integer getTimePosition()
    {
        return this.timePosition;
    }
    
    public void setTimePosition(Integer value)
    {
        this.timePosition = value;     
    }
    
    public Integer getObtainingMode()
    {
        return this.obtainingMode;
    }
    
    public void setObtainingMode(Integer value)
    {
        this.obtainingMode = value;     
    }
    
    public Float getLongitude()
    {
        return this.longitude;
    }
    
    public void setLongitude(Float value)
    {
        this.longitude = value;     
    }
    
    public Float getLatitude()
    {
        return this.latitude;
    }
    
    public void setLatitude(Float value)
    {
        this.latitude = value;     
    }
    
    public Integer getInOutIndicator()
    {
        return this.inOutIndicator;
    }
    
    public void setInOutIndicator(Integer value)
    {
        this.inOutIndicator = value;     
    }
    
    public Integer getAbsenceTypeKey()
    {
        return this.absenceTypeKey;
    }
    
    public void setAbsenceTypeKey(Integer value)
    {
        this.absenceTypeKey = value;     
    }
    
    public String getAbsenceTypeAbbreviation()
    {
        return this.absenceTypeAbbreviation;
    }
    
    public void setAbsenceTypeAbbreviation(String value)
    {
        this.absenceTypeAbbreviation = value;     
    }
    
    public String getReaderDescription()
    {
        return this.readerDescription;
    }
    
    public void setReaderDescription(String value)
    {
        this.readerDescription = value;     
    }
    
    public String getAbsenceTypeDescription()
    {
        return this.absenceTypeDescription;
    }
    
    public void setAbsenceTypeDescription(String value)
    {
        this.absenceTypeDescription = value;     
    }
    
    public Integer getTerminalKey()
    {
        return this.terminalKey;
    }
    
    public void setTerminalKey(Integer value)
    {
        this.terminalKey = value;     
    }
    
    public String getTerminalDescription()
    {
        return this.terminalDescription;
    }
    
    public void setTerminalDescription(String value)
    {
        this.terminalDescription = value;     
    }
    
    public String getOvertimeTypeDescription()
    {
        return this.overtimeTypeDescription;
    }
    
    public void setOvertimeTypeDescription(String value)
    {
        this.overtimeTypeDescription = value;     
    }
    
    public String getOvertimeTypeAbbreviation()
    {
        return this.overtimeTypeAbbreviation;
    }
    
    public void setOvertimeTypeAbbreviation(String value)
    {
        this.overtimeTypeAbbreviation = value;     
    }
    
    public Integer getOvertimeTypeKey()
    {
        return this.overtimeTypeKey;
    }
    
    public void setOvertimeTypeKey(Integer value)
    {
        this.overtimeTypeKey = value;     
    }


    
    
    @Override
    public void loadFromSoap(java.lang.Object paramObj, ExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);



    }

    @Override
    protected boolean loadProperty(PropertyInfo info, SoapObject soapObject, ExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("date"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.date = ExtendedSoapSerializationEnvelope.getDateTimeConverter().convertDateTime(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.date = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("geolocationStatus"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.geolocationStatus = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.geolocationStatus = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("geolocationPrecision"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.geolocationPrecision = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.geolocationPrecision = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("clockingTypeIndicator"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.clockingTypeIndicator = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.clockingTypeIndicator = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("time"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.time = j.toString();
                    }
                }
                else{
                    this.time = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("clockingKey"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.clockingKey = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.clockingKey = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("automatic"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.automatic = Boolean.valueOf(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.automatic = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("readerKey"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.readerKey = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.readerKey = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("timePosition"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.timePosition = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.timePosition = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("obtainingMode"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.obtainingMode = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.obtainingMode = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("longitude"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.longitude = Float.valueOf(j.toString());
                    }
                }
                else if (obj instanceof Float){
                    this.longitude = (Float)obj;
                }
            }
            return true;
        }
        if (info.name.equals("latitude"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.latitude = Float.valueOf(j.toString());
                    }
                }
                else if (obj instanceof Float){
                    this.latitude = (Float)obj;
                }
            }
            return true;
        }
        if (info.name.equals("inOutIndicator"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.inOutIndicator = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.inOutIndicator = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("absenceTypeKey"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.absenceTypeKey = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.absenceTypeKey = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("absenceTypeAbbreviation"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.absenceTypeAbbreviation = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.absenceTypeAbbreviation = (String)obj;
                }
                else{
                    this.absenceTypeAbbreviation = "";
                }
            }
            return true;
        }
        if (info.name.equals("readerDescription"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.readerDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.readerDescription = (String)obj;
                }
                else{
                    this.readerDescription = "";
                }
            }
            return true;
        }
        if (info.name.equals("absenceTypeDescription"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.absenceTypeDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.absenceTypeDescription = (String)obj;
                }
                else{
                    this.absenceTypeDescription = "";
                }
            }
            return true;
        }
        if (info.name.equals("terminalKey"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.terminalKey = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.terminalKey = (Integer)obj;
                }
            }
            return true;
        }
        if (info.name.equals("terminalDescription"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.terminalDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.terminalDescription = (String)obj;
                }
                else{
                    this.terminalDescription = "";
                }
            }
            return true;
        }
        if (info.name.equals("overtimeTypeDescription"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.overtimeTypeDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.overtimeTypeDescription = (String)obj;
                }
                else{
                    this.overtimeTypeDescription = "";
                }
            }
            return true;
        }
        if (info.name.equals("overtimeTypeAbbreviation"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.overtimeTypeAbbreviation = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.overtimeTypeAbbreviation = (String)obj;
                }
                else{
                    this.overtimeTypeAbbreviation = "";
                }
            }
            return true;
        }
        if (info.name.equals("overtimeTypeKey"))
        {
            if(obj!=null)
            {
                if (obj instanceof SoapPrimitive)
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.overtimeTypeKey = Integer.parseInt(j.toString());
                    }
                }
                else if (obj instanceof Integer){
                    this.overtimeTypeKey = (Integer)obj;
                }
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.date!=null? ExtendedSoapSerializationEnvelope.getDateTimeConverter().getStringFromDate(this.date):SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+1)
        {
            return this.geolocationStatus!=null?this.geolocationStatus:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+2)
        {
            return this.geolocationPrecision!=null?this.geolocationPrecision:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+3)
        {
            return this.clockingTypeIndicator!=null?this.clockingTypeIndicator:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+4)
        {
            return this.time!=null?this.time:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+5)
        {
            return this.clockingKey!=null?this.clockingKey:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+6)
        {
            return this.automatic!=null?this.automatic:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+7)
        {
            return this.readerKey!=null?this.readerKey:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+8)
        {
            return this.timePosition!=null?this.timePosition:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+9)
        {
            return this.obtainingMode!=null?this.obtainingMode:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+10)
        {
            return this.longitude!=null?this.longitude:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+11)
        {
            return this.latitude!=null?this.latitude:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+12)
        {
            return this.inOutIndicator!=null?this.inOutIndicator:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+13)
        {
            return this.absenceTypeKey!=null?this.absenceTypeKey:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+14)
        {
            return this.absenceTypeAbbreviation!=null?this.absenceTypeAbbreviation:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+15)
        {
            return this.readerDescription!=null?this.readerDescription:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+16)
        {
            return this.absenceTypeDescription!=null?this.absenceTypeDescription:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+17)
        {
            return this.terminalKey!=null?this.terminalKey:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+18)
        {
            return this.terminalDescription!=null?this.terminalDescription:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+19)
        {
            return this.overtimeTypeDescription!=null?this.overtimeTypeDescription:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+20)
        {
            return this.overtimeTypeAbbreviation!=null?this.overtimeTypeAbbreviation:SoapPrimitive.NullSkip;
        }
        else if(propertyIndex==count+21)
        {
            return this.overtimeTypeKey!=null?this.overtimeTypeKey:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+22;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "date";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "geolocationStatus";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "geolocationPrecision";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "clockingTypeIndicator";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+4)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "time";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+5)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "clockingKey";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+6)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "automatic";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+7)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "readerKey";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+8)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "timePosition";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+9)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "obtainingMode";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+10)
        {
            info.type = Float.class;
            info.name = "longitude";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+11)
        {
            info.type = Float.class;
            info.name = "latitude";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+12)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "inOutIndicator";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+13)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "absenceTypeKey";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+14)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "absenceTypeAbbreviation";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "readerDescription";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+16)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "absenceTypeDescription";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+17)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "terminalKey";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+18)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "terminalDescription";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+19)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "overtimeTypeDescription";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+20)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "overtimeTypeAbbreviation";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        else if(propertyIndex==count+21)
        {
            info.type = PropertyInfo.INTEGER_CLASS;
            info.name = "overtimeTypeKey";
            info.namespace= "http://echange.service.open.bodet.com";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }

    
}
